{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","id","map","UserInfo","user","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"018IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAE1BC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,MACAC,EACEH,EADFG,KAGF,OACE,qBAAKC,UAAU,cAAf,SACE,sBAAKA,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGH,IAGF,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,UCvBEG,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAE1BC,EACED,EADFC,GAGF,OACE,qBAAKJ,UAAU,cAAf,SACGG,EAASE,KAAI,SAAAT,GAAO,OACnB,cAAC,EAAD,CAEEA,QAASA,GADJQ,SCVFE,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBT,EAEES,EAFFT,MACAD,EACEU,EADFV,KAGF,OACE,mBACEG,UAAU,WACVC,KAAI,iBAAYH,GAFlB,SAIGD,MCTMW,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBV,EAIEU,EAJFV,KACAW,EAGED,EAHFC,MACAH,EAEEE,EAFFF,KACAJ,EACEM,EADFN,SAGF,OACE,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGU,IAGH,8BACG,eAED,cAAC,EAAD,CAAUH,KAAMA,UAIpB,mBAAGP,UAAU,iBAAb,SACGD,IAGH,uBACCI,EAASQ,OACN,cAAC,EAAD,CAAaR,SAAUA,IACvB,mBAAG,UAAQ,oBAAX,iCC/BGS,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEvBT,EACES,EADFT,GAGF,OACE,qBAAKJ,UAAU,WAAf,SACGa,EAAMR,KAAI,SAAAI,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,GADDL,SCMR,IAAMS,EAAQC,EAAgBT,KAAI,SAAAI,GAAI,kCACxCA,GADwC,IAE3CF,MAZ0BQ,EAYRN,EAAKM,OAXhBC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKH,KAAOW,MACzC,MAWPZ,UAR8Be,EAQJT,EAAKL,GAPxBe,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQsB,SAAWA,MACxD,QAFF,IAAyBA,EALJH,KAgBfM,EAAM,kBACjB,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUa,MAAOA,QCtBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5921ae02.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const {\n    name,\n    email,\n    body,\n  } = comment;\n\n  return (\n    <div className=\"CommentList\">\n      <div className=\"CommentInfo\">\n        <div className=\"CommentInfo__title\">\n          <strong className=\"CommentInfo__name\">\n            {name}\n          </strong>\n\n          {' by '}\n\n          <a\n            className=\"CommentInfo__email\"\n            href={`mailto:${email}`}\n          >\n            {email}\n          </a>\n        </div>\n\n        <div className=\"CommentInfo__body\">\n          {body}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => {\n  const {\n    id,\n  } = comments;\n\n  return (\n    <div className=\"CommentList\">\n      {comments.map(comment => (\n        <CommentInfo\n          key={id}\n          comment={comment}\n        />\n      ))}\n    </div>\n  );\n};\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const {\n    email,\n    name,\n  } = user;\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import './PostInfo.scss';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post }) => {\n  const {\n    body,\n    title,\n    user,\n    comments,\n  } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          {title}\n        </h3>\n\n        <p>\n          {' Posted by  '}\n\n          <UserInfo user={user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      <hr />\n      {comments.length\n        ? <CommentList comments={comments} />\n        : <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      }\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => {\n  const {\n    id,\n  } = posts;\n\n  return (\n    <div className=\"PostList\">\n      {posts.map(post => (\n        <PostInfo\n          key={id}\n          post={post}\n        />\n      ))}\n    </div>\n  );\n};\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nexport function getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nexport function getCommentsById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId)\n      || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}